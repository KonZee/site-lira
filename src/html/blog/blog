/*<![CDATA[*/

var $lang = new Array();
$lang['posting'] = "Posting. Please wait...";
$lang['commentadded'] = "Your comment was added.";
$lang['sendanother'] = "Send another comment";
$lang['sending'] = "Please wait...";
$lang['tryagain'] = "Try Again";

var blog_url = 'http://liraltd.com';

// init
jQuery(document).ready(function($){

 $('.nav ul.menu').superfish();

 $('ul.menu li a').addClass("fadeThis");

 $('.accordion, .collapsible').AccordionMenu();

  $("a[rel='lightbox'], a[href$='.jpg'], a[href$='.jpeg'], a[href$='.gif'], a[href$='.png'], a[href$='.JPG'], a[href$='.JPEG'], a[href$='.GIF'], a[href$='.PNG']").fancyboxlite({
    'zoomSpeedIn': 333,
    'zoomSpeedOut': 333,
    'zoomSpeedChange': 133,
    'transitionIn'	: 'elastic',
    'transitionOut'	: 'elastic',
    'easingIn'      : 'easeOutBack',
    'easingOut'     : 'easeInBack',
    'overlayShow': true,
    'overlayOpacity': 0.75
 });
 
  $('.clearField').clearField({
   blurClass: 'clearFieldBlurred',
   activeClass: 'clearFieldActive'
 });

  $("form").submit(function(){
   $('.clearField', this).each(function(){
     if($(this).val() == ($(this).attr('rel') || 'http://')) $(this).val('');
   });
   return true;
 });

 $('.user-form').submit(function(){
   var form = $(this);
   var submit = $('input.submit', this);
   var antispam = $('input[name=user-form-nonce]', this);

   jQuery(this).ajaxSubmit({

     beforeSubmit: function(){
       $('.error', form).remove(); // remove old error msgs
       submit.attr('disabled', 'disabled');
       submit.val($lang['sending']);
     },

     error: function(request){
       // error
     },

     success: function(data){
       var obj = eval('('+data+')');
       if(typeof(obj.error) != 'undefined'){
         submit.after(obj.error);
         submit.removeAttr('disabled');
         submit.val($lang['tryagain']);
       }
       else if(typeof(obj.success) != 'undefined'){
         form.after(obj.success);
//         form.remove();
         submit.remove();
         $('input,textarea,select', form).attr('disabled', 'disabled');
       }
     }
   });
   return false;
 });

 $('input[name=user-form-nonce]').each(function(){
    var e = $(this);
    var form = $(this).parents('form');
    var id = $('.form-id', form).val();

    var antispam = function(){
      $.ajax({
        url: blog_url,
        type: "GET",
        data: ({
          atom_get_user_form_nonce: id
        }),
        beforeSend: function(){ },
        error: function(request){ },
        success: function(data){ e.val(data); $('input.submit', form).removeAttr('disabled'); }
      });
    }
    setTimeout(antispam, (1 * 1000)); // wait
 });

  $('#post-tabs .sections').cycle({
   fx: 'fade',
   before: function(curr, next, opts, fwd) {
     // little hack to get the slide content height
     var $ht = $(this).height();

     // set the container's height to that of the current slide
     $(this).parent().animate({height: $ht}, 333, 'easeOutExpo');
   },
   speed: 500,
   pause: true,
   height: $($('#post-tabs ul.tabs li.active').attr('href')).height(),
   containerResize: 0,
   easing: 'easeOutExpo',
   pager: '#post-tabs ul.tabs',
   pagerAnchorBuilder: function(idx, slide) {
     // return selector string for existing anchor
     return '#post-tabs ul.tabs li:eq(' + idx + ') a';
   },
   activePagerClass: 'active',
   timeout:  0
 });

   $('.widget-tabs').each(function(){
   var $id = $(this).attr('id');
   var $fx = '';
   var $ease = '';
   var $classes = $(this).attr('class').split(' ');

   // get the effects/ease options from classes
   for (var i = 0; i < $classes.length; i++){
     $matches = /^fx\-(.+)/.exec($classes[i]);
     if ($matches != null){
       if($fx != '') $fx = $fx + ', '+$matches[1];
       else $fx = $matches[1];
     }
     $matches = /^ease\-(.+)/.exec($classes[i]);
     if ($matches != null) $ease = $matches[1];
   }
   if($fx == '') $fx = 'fade';
   if($ease == '') $fx = 'swing';

   // get the active nav
   var $activeNav = '#'+$id+' ul.tabs li.active';

   // no active class found, widget might have changed. reset
   if($($activeNav).attr('class') == undefined){
     $activeNav = $('#'+$id+' ul.tabs li:first');
     $($activeNav).addClass('active');
     $('#'+$id+' '+$($activeNav).find('a').attr('href')).show();
   }
   var $index = $($activeNav).index();
   var $activeHeight = $($($activeNav).find('a').attr('href')).height();

   $('#'+$id+' .sections').cycle({
     fx: $fx,
     before: function(curr, next, opts, fwd) {
       // little hack to get the slide content height
       // we need to make the slide temporarily visible to retrieve it's children height
       $styles = $(this).attr('style');
       $(this).show();
       var $ht = $(this).find('.block-content').height();
       $(this).attr('style', $styles);
       //set the container's height to that of the current slide
       $(this).parent().animate({height: $ht +5}, 333, $ease);
     },
     after:function(curr, next, opts, fwd) {
       // set the cookie (php will add or not the active/hidden classes based on this)
       $cookieValue = $($activeNav).attr("class").split(" ")[0];
       $.cookie($id , $cookieValue, { path: '/' });
     },
     speed: (($fx != 'toss') ? 500 : 2000),
     pause: true,
     height: $activeHeight,
     containerResize: 0,
     startingSlide: $index,
     easing: $ease,
     pager: '#'+$id+' ul.tabs',
     pagerAnchorBuilder: function(idx, slide) {
       // return selector string for existing anchor
       return '#'+$id+' ul.tabs li:eq(' + idx + ') a';
     },
     activePagerClass: 'active',
     timeout:  0
   });
 });

  $(".nav").attr("role", "navigation");
 $("#primary-content").attr("role", "main");
 $("#sidebar").attr("role", "complementary");
 $(".search-form").attr("role", "search");

 
  $(".toggle").live("click", function(){
   var target = $("."+$(this).attr('rel'), this.parent);
   $(target).slideFade('toggle', 333, 'easeOutQuart');
   return false;
 });

 
 // $(".block ul.menu a").addClass("fadeThis");
 if($.support.opacity && window.XMLHttpRequest)
   $('.fadeThis').livequery(function(){
     $(this).append('<span class="hover"></span>').each(function(){
       var span = $('> span.hover', this).css('opacity', 0);
       $(this).hover(function() { span.stop().fadeTo(200, 1); },
                     function() { span.stop().fadeTo(800, 0); });
     });
   });

  $(".search-form").each(function(){
    form = $(this);
    $('a.submit', this).click(function(){
      form.submit();
    });
 });

  $('a.tt').bubble();

  $('ul[class*="nudge-"] a').each(function(){
   var classes = $(this).closest('ul').attr('class');
   var amount = parseInt(/amount-(\d+)/.exec(classes)[1], 10);
   var direction = /nudge-([^\s]+)/.exec(classes)[1];
   $(this).nudge({
     property: 'margin' + direction.charAt(0).toUpperCase() + direction.slice(1),
     amount: -(amount),
     duration: 166
   });
 });

  $('span.no-img.regen').livequery(function(){
    var size = $(this).attr('rel');
    var id = $(this).attr('id').split(/-/g).slice(1);


    var element = $(this);
    $.ajax({
      url: blog_url,
      type: "GET",
      data: ({
        atom_update_thumb: 1,
        attachment_size: size,
        post_id: id[0],
        thumb_id: id[1]
        }),
      beforeSend: function() { element.addClass('loading'); },
      error: function(request){ },
      success: function(data) { element.replaceWith(data); }
	});
 });
 
  $(".block-featured .cycle").each(function(index, value){
   var count = (index + 1) * 150;
   var $$ = $(this),
       featured_cycle = function(){
         $$.cycle({
           fx: 'scrollDown',
           speed: 500,
           pause: true,
           prev: '.block-featured a.prev',
           next: '.block-featured a.next',
           easing: 'easeOutBack',
           timeout:  10000         });
       };

   setTimeout(featured_cycle, count);
 });

  $('a.caption').each(function(){
   var title = $(this).attr('title');
   $(this).append('<div class="cover"><p>'+title+'</p></div>');
   $(this).hover(function(){
     $(".cover", this).stop().animate({bottom:'0px',opacity:1},{queue:false,duration:200,easing:'easeOutExpo'});
     }, function() {
     $(".cover", this).stop().animate({bottom:'-100px',opacity:0},{queue:false,duration:300,easing:'easeInExpo'});
   });

 });

  $('a.go-top').each(function(){
   var link = $(this);

   // link click event
   link.click(function () { $('html').animate({ scrollTop: 0 }, 'slow'); return true; });

   // window scroll event
   $(window).scroll(function(){
     //stupid IE hack
     if(!jQuery.support.hrefNormalized){
       link.css({'position': 'absolute', 'top': $(window).scrollTop() + $(window).height() - 50});
     }
     if($(window).scrollTop() >= 500) link.fadeIn(200); else link.fadeOut(200);
   });
 });

  
      $("#instance-atom_posts-2 a.more").click(function(event){
        event.preventDefault();
        $link = $(this);
        $offset = parseInt($link.attr('rel'));

        $.ajax({
          type: "GET",
          url: "http://liraltd.com",
          data: { instance: 2,
                  offset: $offset,
                  atom_get_posts: 1 },
          beforeSend: function() { $link.addClass("loading"); },
          complete: function() { $link.removeClass("loading"); },
          success: function(response){
            var obj = eval('('+response+')');

            // append to list & update tab container height (if we're inside a tabbed widget)
            if(obj.output != '')
              jQuery(obj.output).appendTo("#instance-atom_posts-2 ul").hide().each(function(i){
                 jQuery(this).delay(500*i).animate(
                    {
                      "opacity": "show",
                      "height": "show",
                      "marginTop": "show",
                      "marginBottom": "show",
                      "paddingTop": "show",
                      "paddingBottom": "show"
                    },
                    { duration: 333,
                      step: function(now, fx){
                      $link.parents('li.block .sections').height(($link.parents('#instance-atom_posts-2').height()) + 5);
                    }
                 });
              });

            $link.attr('rel', obj.offset);

            // no more data?
            if(!obj.more) $link.hide();
          }
        });
        return false;

      });

      
      $("#instance-atom_posts-3 a.more").click(function(event){
        event.preventDefault();
        $link = $(this);
        $offset = parseInt($link.attr('rel'));

        $.ajax({
          type: "GET",
          url: "http://liraltd.com",
          data: { instance: 3,
                  offset: $offset,
                  atom_get_posts: 1 },
          beforeSend: function() { $link.addClass("loading"); },
          complete: function() { $link.removeClass("loading"); },
          success: function(response){
            var obj = eval('('+response+')');

            // append to list & update tab container height (if we're inside a tabbed widget)
            if(obj.output != '')
              jQuery(obj.output).appendTo("#instance-atom_posts-3 ul").hide().each(function(i){
                 jQuery(this).delay(500*i).animate(
                    {
                      "opacity": "show",
                      "height": "show",
                      "marginTop": "show",
                      "marginBottom": "show",
                      "paddingTop": "show",
                      "paddingBottom": "show"
                    },
                    { duration: 333,
                      step: function(now, fx){
                      $link.parents('li.block .sections').height(($link.parents('#instance-atom_posts-3').height()) + 5);
                    }
                 });
              });

            $link.attr('rel', obj.offset);

            // no more data?
            if(!obj.more) $link.hide();
          }
        });
        return false;

      });

      
      $("#instance-atom_posts-4 a.more").click(function(event){
        event.preventDefault();
        $link = $(this);
        $offset = parseInt($link.attr('rel'));

        $.ajax({
          type: "GET",
          url: "http://liraltd.com",
          data: { instance: 4,
                  offset: $offset,
                  atom_get_posts: 1 },
          beforeSend: function() { $link.addClass("loading"); },
          complete: function() { $link.removeClass("loading"); },
          success: function(response){
            var obj = eval('('+response+')');

            // append to list & update tab container height (if we're inside a tabbed widget)
            if(obj.output != '')
              jQuery(obj.output).appendTo("#instance-atom_posts-4 ul").hide().each(function(i){
                 jQuery(this).delay(500*i).animate(
                    {
                      "opacity": "show",
                      "height": "show",
                      "marginTop": "show",
                      "marginBottom": "show",
                      "paddingTop": "show",
                      "paddingBottom": "show"
                    },
                    { duration: 333,
                      step: function(now, fx){
                      $link.parents('li.block .sections').height(($link.parents('#instance-atom_posts-4').height()) + 5);
                    }
                 });
              });

            $link.attr('rel', obj.offset);

            // no more data?
            if(!obj.more) $link.hide();
          }
        });
        return false;

      });

      
});

/* ]]> */